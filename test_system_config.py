"""
Script de prueba para el m√≥dulo System Config
==============================================

Este script demuestra el funcionamiento del nuevo m√≥dulo de configuraci√≥n del sistema
"""

import asyncio
from datetime import datetime, date
from decimal import Decimal

# Importar las utilidades y modelos del m√≥dulo
import sys
sys.path.append('.')

from app.modules.system_config.utils import PeruTimeUtils
from app.modules.system_config.models import SystemConfigModel, ExchangeRateModel, TimeConfigModel

async def test_peru_time_utils():
    """Prueba las utilidades de tiempo de Per√∫"""
    print("=== PRUEBAS DE UTILIDADES DE TIEMPO PER√ö ===")
    
    # Hora actual en Per√∫
    current_time = PeruTimeUtils.now_peru()
    print(f"Hora actual en Per√∫: {current_time}")
    print(f"Fecha actual en Per√∫: {PeruTimeUtils.today_peru()}")
    
    # Formateo de fecha
    formatted = PeruTimeUtils.format_peru_datetime(current_time)
    print(f"Fecha formateada: {formatted}")
    
    # Verificar si es d√≠a h√°bil
    is_business = PeruTimeUtils.is_business_day(current_time)
    print(f"¬øEs d√≠a h√°bil?: {is_business}")
    
    # Obtener pr√≥ximo d√≠a h√°bil
    business_day = PeruTimeUtils.get_business_day_peru()
    print(f"Pr√≥ximo d√≠a h√°bil: {business_day}")
    
    # Inicio y fin del d√≠a
    start_day = PeruTimeUtils.start_of_day_peru()
    end_day = PeruTimeUtils.end_of_day_peru()
    print(f"Inicio del d√≠a: {start_day}")
    print(f"Fin del d√≠a: {end_day}")
    
    print()

def test_models():
    """Prueba los modelos del sistema"""
    print("=== PRUEBAS DE MODELOS ===")
    
    # Probar SystemConfigModel
    config = SystemConfigModel(
        config_key="test.setting",
        config_value="test_value",
        config_type="string",
        description="Configuraci√≥n de prueba",
        category="test"
    )
    print(f"Configuraci√≥n creada: {config.config_key} = {config.parsed_value}")
    
    # Probar ExchangeRateModel
    exchange_rate = ExchangeRateModel(
        currency_from="USD",
        currency_to="PEN",
        exchange_rate=Decimal("3.75"),
        exchange_date=PeruTimeUtils.today_peru(),
        source="manual"
    )
    print(f"Tipo de cambio creado: {exchange_rate.currency_from}/{exchange_rate.currency_to} = {exchange_rate.exchange_rate}")
    
    # Probar TimeConfigModel
    time_config = TimeConfigModel()
    print(f"Configuraci√≥n de tiempo: Zona horaria = {time_config.timezone}")
    print(f"Hora actual seg√∫n config: {time_config.current_datetime_peru}")
    print(f"¬øEs horario laboral?: {time_config.is_business_hours}")
    
    print()

def demonstrate_functionality():
    """Demuestra la funcionalidad principal del m√≥dulo"""
    print("=== DEMOSTRACI√ìN DE FUNCIONALIDAD ===")
    
    print("1. GESTI√ìN DE TIEMPO CON ZONA HORARIA DE PER√ö")
    print("   ‚úÖ Obtenci√≥n de hora actual en zona horaria de Per√∫")
    print("   ‚úÖ C√°lculo de d√≠as h√°biles")
    print("   ‚úÖ Formateo de fechas seg√∫n configuraci√≥n")
    print("   ‚úÖ Verificaci√≥n de horario laboral")
    
    print("\n2. GESTI√ìN DE TIPOS DE CAMBIO")
    print("   ‚úÖ Almacenamiento de tipos de cambio por fecha")
    print("   ‚úÖ C√°lculo de conversiones de moneda")
    print("   ‚úÖ Hist√≥rico de tipos de cambio")
    print("   ‚úÖ Soporte para m√∫ltiples fuentes (manual, API, BCRP)")
    
    print("\n3. CONFIGURACIONES DEL SISTEMA")
    print("   ‚úÖ Configuraciones categorizadas")
    print("   ‚úÖ Tipos de dato tipados (string, number, boolean, json)")
    print("   ‚úÖ Configuraciones del sistema protegidas")
    print("   ‚úÖ B√∫squeda y filtrado de configuraciones")
    
    print("\n4. API ENDPOINTS DISPONIBLES")
    print("   üìç GET  /api/v1/system/health - Health check")
    print("   üìç GET  /api/v1/system/time/current-peru - Hora actual de Per√∫")
    print("   üìç GET  /api/v1/system/time/business-hours - Verificar horario laboral")
    print("   üìç GET  /api/v1/system/time-config - Configuraci√≥n de tiempo")
    print("   üìç POST /api/v1/system/configs - Crear configuraci√≥n")
    print("   üìç GET  /api/v1/system/configs - Listar configuraciones")
    print("   üìç POST /api/v1/system/exchange-rates - Crear tipo de cambio")
    print("   üìç GET  /api/v1/system/exchange-rates - Listar tipos de cambio")
    print("   üìç POST /api/v1/system/exchange-rates/calculate - Calcular conversi√≥n")
    print("   üìç GET  /api/v1/system/status - Estado del sistema")
    
    print()

def show_examples():
    """Muestra ejemplos de uso"""
    print("=== EJEMPLOS DE USO ===")
    
    print("üìù EJEMPLO 1: Crear configuraci√≥n del sistema")
    print("""
    POST /api/v1/system/configs
    {
        "config_key": "business.tax_rate",
        "config_value": "18.0",
        "config_type": "number",
        "description": "Tasa de IGV en Per√∫ (%)",
        "category": "business"
    }
    """)
    
    print("üìù EJEMPLO 2: Crear tipo de cambio")
    print("""
    POST /api/v1/system/exchange-rates
    {
        "currency_from": "USD",
        "currency_to": "PEN",
        "exchange_rate": 3.75,
        "exchange_date": "2025-08-24",
        "source": "bcrp",
        "is_official": true
    }
    """)
    
    print("üìù EJEMPLO 3: Calcular conversi√≥n de moneda")
    print("""
    POST /api/v1/system/exchange-rates/calculate
    {
        "amount": 100.00,
        "currency_from": "USD",
        "currency_to": "PEN",
        "exchange_date": "2025-08-24"
    }
    """)
    
    print("üìù EJEMPLO 4: Obtener hora actual de Per√∫")
    print("""
    GET /api/v1/system/time/current-peru
    
    Respuesta:
    {
        "current_time": "2025-08-24T21:14:11.908832-05:00",
        "timezone": "America/Lima",
        "formatted": "2025-08-24 21:14:11 -05"
    }
    """)

async def main():
    """Funci√≥n principal de prueba"""
    print("üöÄ M√ìDULO SYSTEM CONFIG - PRUEBAS Y DEMOSTRACI√ìN")
    print("=" * 60)
    
    # Ejecutar pruebas
    await test_peru_time_utils()
    test_models()
    demonstrate_functionality()
    show_examples()
    
    print("‚úÖ M√ìDULO IMPLEMENTADO EXITOSAMENTE")
    print("\nCaracter√≠sticas principales:")
    print("‚Ä¢ ‚úÖ Gesti√≥n de fecha/hora con zona horaria de Per√∫")
    print("‚Ä¢ ‚úÖ Tipos de cambio con hist√≥rico")
    print("‚Ä¢ ‚úÖ Configuraciones del sistema categorizadas")
    print("‚Ä¢ ‚úÖ API REST completa")
    print("‚Ä¢ ‚úÖ Validaciones y tipos de dato")
    print("‚Ä¢ ‚úÖ Documentaci√≥n autom√°tica en /docs")

if __name__ == "__main__":
    asyncio.run(main())
